<#  
    Purpose:  
    This PowerShell script uploads a document to iManage Work and adds comments.  
    It authenticates using OAuth2, retrieves an access token, and then uploads the file.  
#>

# Define variables
$workServer = "your-imanage-instance.com"
$oauthUri = "https://$workServer/auth/oauth2/token"
$uploadUrl = "https://$workServer/work/api/v2/customers/1/libraries/CH/documents"

# Authentication credentials (Replace with actual values)
$clientId = "YOUR_CLIENT_ID"
$clientSecret = "YOUR_CLIENT_SECRET"
$username = "YOUR_USERNAME"
$password = "YOUR_PASSWORD"

# Document details
$filePath = "C:\FOLDER1\XXX"
$comments = "This is a test upload with comments."

# Log file location
$logFile = "C:\Logs\iManage_API_Log.txt"

# Function to log messages
Function Write-Log {
    param ([string]$message)
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Add-Content -Path $logFile -Value "$timestamp - $message"
}

Write-Log "Starting script execution..."

# Request body for OAuth token
$authBody = @{
    "username"     = $username
    "password"     = $password
    "grant_type"   = "password"
    "client_id"    = $clientId
    "client_secret"= $clientSecret
    "scope"        = "admin"
}

# Try to obtain OAuth Token
try {
    Write-Log "Requesting OAuth Token..."
    $tokenResponse = Invoke-RestMethod -Uri $oauthUri -Method Post -Body $authBody -ContentType "application/x-www-form-urlencoded"
    $accessToken = $tokenResponse.access_token
    Write-Log "OAuth Token retrieved successfully."
}
catch {
    Write-Log "ERROR: Failed to retrieve OAuth Token - $_"
    Exit 1
}

# Prepare file upload
$headers = @{
    "Authorization" = "Bearer $accessToken"
    "Accept"        = "application/json"
}

$uploadBody = @{
    "name" = "XXX"
    "comments" = $comments
}

# Try uploading the document
try {
    Write-Log "Uploading document..."
    $fileBytes = [System.IO.File]::ReadAllBytes($filePath)
    $encodedFile = [Convert]::ToBase64String($fileBytes)
    $uploadBody["file"] = $encodedFile

    $uploadResponse = Invoke-RestMethod -Uri $uploadUrl -Method Post -Headers $headers -Body ($uploadBody | ConvertTo-Json) -ContentType "application/json"
    
    Write-Log "Document uploaded successfully."
    Write-Log "Response: $($uploadResponse)"
}
catch {
    Write-Log "ERROR: Failed to upload document - $_"
    Exit 1
}

Write-Log "Script execution completed successfully."
